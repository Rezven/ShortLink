# 定义自定义网络
networks:
  public:
    driver: bridge
    ipam:
      config:
        - subnet: 43.139.1.0/24
  internal:
    driver: bridge
    internal: true

services:
  # 前端服务
  frontend:
    build:
      context: frontend  # 独立前端构建
      dockerfile: frontend/Dockerfile  # 指定 Dockerfile 路径
    ports:
      - "80:80"
    networks:
      - public
    depends_on:
      - backend

  # 后端服务
  backend:
    build:
      context: .  # 将构建上下文提升到项目根目录
      dockerfile: backend/Dockerfile  # 指定 Dockerfile 路径
    volumes:
      - ./frontend:/app/frontend  # 挂载前端代码
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
    environment:
      SERVER_PUBLIC_IP: ${SERVER_PUBLIC_IP}
      SERVER_PRIVATE_IP: ${SERVER_PRIVATE_IP}
      SPRING_MYSQL_HOST: mysql
      SPRING_DATASOURCE_PORT: ${MYSQL_PORT}
      SPRING_DATASOURCE_URL: jdbc:mysql://${SERVER_PRIVATE_IP}:${MYSQL_PORT}/${DATABASE_NAME}?useSSL=false
      SPRING_DATASOURCE_USERNAME: ${DATABASE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DATABASE_PASSWORD}
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: ${REDIS_PORT}
      SPRING_REDIS_PASSWORD: ${REDIS_PASSWORD}
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: ${RABBITMQ_PORT}
      SPRING_RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      SPRING_RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
    networks:
      - public
      - internal
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  # Nginx 服务
  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /data/EZTools/ShortLink/var/lib/nginx/conf/nginx.conf:/etc/nginx/nginx.conf      # 宿主路径 -> 容器文件
      - /data/EZTools/ShortLink/var/lib/nginx/conf/conf.d:/etc/nginx/conf.d              # 挂载自定义配置
      - /data/EZTools/ShortLink/var/lib/nginx/logs:/var/log/nginx                        # 挂载日志目录
      - /data/EZTools/ShortLink/var/lib/nginx/html:/usr/share/nginx/html
      - /data/EZTools/ShortLink/var/lib/nginx/ssl:/etc/nginx/ssl
    networks:
      - internal
    restart: unless-stopped

  # MySQL 服务
  mysql:
    image: mysql:8.0.36
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}              # 设置 root 密码
      MYSQL_DATABASE: ${DATABASE_NAME}                       # 创建默认数据库
      MYSQL_USER: ${DATABASE_USERNAME}                       # 创建普通用户（非root）
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}                   # 普通用户密码
    ports:
        - "${MYSQL_PORT}:${MYSQL_PORT}"
    volumes:
      - /data/EZTools/ShortLink/var/lib/mysql/data:/var/lib/mysql                          # 持久化数据
      - /data/EZTools/ShortLink/var/lib/mysql/conf.d:/etc/mysql/conf.d                     # 挂载自定义配置
      - ./backend/src/main/resources/DataBase/init_scripts.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      internal:
        ipv4_address: ${SERVER_PRIVATE_IP}
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 5s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  # Redis 服务
  redis:
    image: redis:7.2-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}           # 设置 Redis 密码
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - /data/EZTools/ShortLink/var/lib/redis/data:/data                                          # 持久化数据
      - /data/EZTools/ShortLink/var/lib/redis/conf/redis.conf:/usr/local/etc/redis/redis.conf     # 挂载自定义配置
    networks:
      - internal
    healthcheck:
        test: [ "CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping" ]
    restart: unless-stopped

  # RabbitMQ 服务
  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER= ${RABBITMQ_USERNAME}                      # 创建默认用户
      - RABBITMQ_DEFAULT_PASS= ${RABBITMQ_PASSWORD}                      # 设置默认密码
    volumes:
      - /data/EZTools/ShortLink/var/lib/rabbitmq/data:/var/lib/rabbitmq                                # 持久化数据
      - /data/EZTools/ShortLink/var/lib/rabbitmq/conf/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf        # 挂载自定义配置
    networks:
      - internal
    healthcheck:
        test: [ "CMD", "rabbitmq-diagnostics", "check_port_connectivity" ]
    restart: unless-stopped

